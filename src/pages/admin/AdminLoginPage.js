import React, { useState, useEffect } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { useAuth } from '../../hooks/useAuth';
import '../../styles/AdminLoginPage.css';
import api from '../../services/api';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç AdminLoginPage - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
 */
const AdminLoginPage = () => {
  const navigate = useNavigate();
  const { login, user, error: authError, logout } = useAuth();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
  const [formData, setFormData] = useState({
    email: '',
    password: ''
  });
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
  const [formError, setFormError] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [apiStatus, setApiStatus] = useState(null);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º formError, –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è authError
  useEffect(() => {
    if (authError) {
      setFormError(authError);
    }
  }, [authError]);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É API
  useEffect(() => {
    const checkApiStatus = async () => {
      try {
        const response = await api.checkAvailability();
        if (response.status === 200) {
          setApiStatus('available');
        } else {
          setApiStatus('error');
        }
      } catch (error) {
        setApiStatus('unavailable');
      }
    };
    
    checkApiStatus();
  }, []);

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
   */
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª–µ–π
    setFormError('');
  };

  /**
   * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã –∏ –æ—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
   */
  const handleReset = () => {
    setFormData({
      email: '',
      password: ''
    });
    setFormError('');
    
    // –û—á–∏—â–∞–µ–º localStorage –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    // –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    localStorage.removeItem('authToken');
    localStorage.removeItem('user_is_admin');
    window.location.reload();
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
   */
  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setFormError('');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π
    if (!formData.email || !formData.password) {
      setFormError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      setIsLoading(false);
      return;
    }
    
    try {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–µ—Ç–æ–¥–∞ login
      if (!login || typeof login !== 'function') {
        console.error('–û—à–∏–±–∫–∞: login –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π', login);
        setFormError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        return;
      }
      
      // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ login, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç boolean
      const success = await login(formData.email, formData.password);
      console.log('Login success:', success);
      
      if (success) {
        console.log('–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        navigate('/admin/dashboard');
      } else {
        console.log('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        setFormError(authError || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      setFormError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="admin-login-container">
      <div className="admin-login-card">
        <h1 className="admin-login-title">–í—Ö–æ–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤</h1>
        
        {apiStatus && (
          <div className={`admin-api-status admin-api-status-${apiStatus}`}>
            {apiStatus === 'checking' && 'üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...'}
            {apiStatus === 'available' && '‚úÖ API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.'}
            {apiStatus === 'error' && '‚ö†Ô∏è API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'}
            {apiStatus === 'unavailable' && (
              <div className="admin-api-status admin-api-status-unavailable">
                ‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:
                <ul>
                  <li>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã SSL –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã</li>
                  <li>–ë—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω</li>
                  <li>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã</li>
                </ul>
              </div>
            )}
          </div>
        )}
        
        {formError && (
          <div className="admin-login-error">
            {formError}
          </div>
        )}
        
        <form onSubmit={handleSubmit} className="admin-login-form">
          <div className="form-group">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleInputChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
              required
            />
          </div>
          
          <div className="form-group">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
            <input
              type="password"
              id="password"
              name="password"
              value={formData.password}
              onChange={handleInputChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
              required
            />
          </div>
          
          <div className="admin-login-buttons">
            <button 
              type="submit" 
              className="admin-login-button"
              disabled={isLoading}
            >
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
            
            <button 
              type="button" 
              className="admin-reset-button"
              onClick={handleReset}
            >
              –°–±—Ä–æ—Å–∏—Ç—å
            </button>
          </div>
        </form>
        
        <div className="admin-login-footer">
          <Link to="/" className="admin-login-link">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</Link>
        </div>
      </div>
    </div>
  );
};

export default AdminLoginPage; 