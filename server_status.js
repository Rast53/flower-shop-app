// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
const http = require('http');
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

const API_URL = 'http://localhost:3000/api';
const SERVER_PROJECT_PATH = '../flower-shop-server';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
function checkServerStatus() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
  console.log(`üîó –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫: ${API_URL}`);

  return new Promise((resolve, reject) => {
    const req = http.get(API_URL, (res) => {
      console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω! –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
      
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          console.log('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
          resolve(true);
        } catch (e) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', e.message);
          resolve(true); // –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON
        }
      });
    });

    req.on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
      
      if (error.code === 'ECONNREFUSED') {
        console.log('üî¥ –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
        reject(false);
      } else {
        console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–º –ø–æ—Ä—Ç—É');
        console.log('2. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ–∞–µ—Ä–≤–æ–ª–æ–º');
        console.log('3. –°–µ—Ç–µ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞');
        reject(false);
      }
    });

    req.setTimeout(5000, () => {
      req.destroy();
      console.log('‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ (5 —Å–µ–∫—É–Ω–¥)');
      reject(false);
    });
  });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
function checkServerProject() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...');
  
  try {
    if (fs.existsSync(SERVER_PROJECT_PATH)) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç: ${SERVER_PROJECT_PATH}`);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
      const packageJsonPath = path.join(SERVER_PROJECT_PATH, 'package.json');
      if (fs.existsSync(packageJsonPath)) {
        console.log('‚úÖ –§–∞–π–ª package.json –Ω–∞–π–¥–µ–Ω');
        
        try {
          const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
          console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:');
          Object.keys(packageJson.scripts || {}).forEach(script => {
            console.log(`   - ${script}: ${packageJson.scripts[script]}`);
          });
          return true;
        } catch (e) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ package.json:', e.message);
        }
      } else {
        console.log('‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } else {
      console.log(`‚ùå –°–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: ${SERVER_PROJECT_PATH}`);
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É –≤ —Å–∫—Ä–∏–ø—Ç–µ');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:', error.message);
  }
  
  return false;
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
function startServer() {
  console.log('\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
  
  try {
    process.chdir(SERVER_PROJECT_PATH);
    console.log(`‚úÖ –ü–µ—Ä–µ—à–µ–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${SERVER_PROJECT_PATH}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if (!fs.existsSync('node_modules')) {
      console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
      execSync('npm install', { stdio: 'inherit' });
      console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    }
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ npm start...');
    console.log('üîî –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ');
    console.log('‚ö†Ô∏è –ó–∞–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã (Ctrl+C)');
    console.log('==================================================');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
    execSync('npm start', { stdio: 'inherit' });
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üîÑ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ API-—Å–µ—Ä–≤–µ—Ä–∞...');
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
    const isServerRunning = await checkServerStatus().catch(() => false);
    
    if (isServerRunning) {
      console.log('\n‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è.');
      return;
    }
    
    // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
    const isServerProjectValid = checkServerProject();
    
    if (isServerProjectValid) {
      console.log('\n‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω');
      
      const startNow = true; // –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É
      
      if (startNow) {
        startServer();
      } else {
        console.log('\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–µ—Ä–≤–µ—Ä–∞ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
        console.log(`  cd ${SERVER_PROJECT_PATH}`);
        console.log('  npm start');
      }
    } else {
      console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç');
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞');
    }
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main(); 